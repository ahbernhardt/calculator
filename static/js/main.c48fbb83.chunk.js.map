{"version":3,"sources":["components/Screen/ResultScreen.js","components/Screen/ComputationScreen.js","components/Screen/Screen.js","components/Keypad/KeypadRow.js","components/Button/Button.js","components/Button/LargeButton.js","components/Keypad/Keypad.js","components/TopSection/TopSection.js","components/Calculator/Calculator.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["resultScreen","props","className","children","computationScreen","screen","id","ResultScreen","result","ComputationScreen","equation","keypadRow","button","classes","type","push","join","onClick","onButtonPress","largeButton","Button","keypad","KeypadRow","LargeButton","TopSection","aria-hidden","Component","Calculator","state","event","pressedButton","target","innerHTML","clear","indexOf","evalResult","Function","Number","isInteger","toFixed","setState","error","alert","trim","substr","length","this","Footer","href","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c48fbb83.chunk.js","sourcesContent":["import React from 'react';\n\nconst resultScreen = (props) => (\n    <div className=\"result-screen\">\n        {props.children}\n    </div>\n);\n\nexport default resultScreen;","import React from 'react';\n\nconst computationScreen = (props) => (\n    <div className=\"computation-screen\">\n        {props.children}\n    </div>\n);\n\nexport default computationScreen;","import React from 'react';\n\nimport ResultScreen from './ResultScreen';\nimport ComputationScreen from './ComputationScreen';\nimport './Screen.css'\nconst screen = (props) => (\n    <section className=\"screen\" id=\"display\">\n        <ResultScreen>{props.result}</ResultScreen>\n        <ComputationScreen>{props.equation}</ComputationScreen>\n    </section>\n);\n\nexport default screen;\n","import React from 'react';\n\nconst keypadRow = (props) => (\n    <div className=\"keypad__row\">\n        {props.children}\n    </div>\n);\n\nexport default keypadRow;","import React from 'react';\nimport './Buttons.css'\nconst button = (props) => {\n    const classes = ['btn'];\n\n    if (typeof props !== 'undefined'\n        && typeof props.type !== 'undefined')\n        classes.push('btn--' + props.type);\n\n    return (\n        <button className={classes.join(' ')} onClick={props.onButtonPress}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default button;\n","import React from 'react';\nimport Button from './Button';\n\nconst largeButton = (props) => <Button type='large' {...props} />;\n\nexport default largeButton;\n","import React from 'react';\n\nimport KeypadRow from './KeypadRow';\nimport Button from '../Button/Button';\nimport LargeButton from '../Button/LargeButton';\nimport './Keypad.css'\n\nconst keypad = props => (\n    <section className=\"keypad\">\n        {/* row #1 */}\n        <KeypadRow>\n            <Button id=\"clear\" type=\"primary\" onButtonPress={props.onButtonPress}>C</Button>\n            <Button type=\"primary\" onButtonPress={props.onButtonPress}>&larr;</Button>\n            <Button type=\"operator\" onButtonPress={props.onButtonPress}>%</Button>\n            <Button id=\"divide\" type=\"operator\" onButtonPress={props.onButtonPress}>/</Button>\n        </KeypadRow>\n\n        {/* row #2 */}\n        <KeypadRow>\n            <Button id=\"seven\" onButtonPress={props.onButtonPress}>7</Button>\n            <Button id=\"eight\" onButtonPress={props.onButtonPress}>8</Button>\n            <Button id=\"nine\" onButtonPress={props.onButtonPress}>9</Button>\n            <Button id=\"multiple\" type=\"operator\" onButtonPress={props.onButtonPress}>*</Button>\n        </KeypadRow>\n\n        {/* row #3 */}\n        <KeypadRow>\n            <Button id=\"four\" onButtonPress={props.onButtonPress}>4</Button>\n            <Button id=\"five\" onButtonPress={props.onButtonPress}>5</Button>\n            <Button id=\"six\" onButtonPress={props.onButtonPress}>6</Button>\n            <Button id=\"subtract\" type=\"operator\" onButtonPress={props.onButtonPress}>-</Button>\n        </KeypadRow>\n\n        {/* row #4 */}\n        <KeypadRow>\n            <Button id=\"one\" onButtonPress={props.onButtonPress}>1</Button>\n            <Button id=\"two\" onButtonPress={props.onButtonPress}>2</Button>\n            <Button id=\"three\" onButtonPress={props.onButtonPress}>3</Button>\n            <Button id=\"add\" type=\"operator\" onButtonPress={props.onButtonPress}>+</Button>\n        </KeypadRow>\n\n        {/* row #5 */}\n        <KeypadRow>\n            <LargeButton id=\"zero\" onButtonPress={props.onButtonPress}>0</LargeButton>\n            <Button id=\"decimal\" onButtonPress={props.onButtonPress}>.</Button>\n            <Button id=\"equals\" type=\"operator\" onButtonPress={props.onButtonPress}>=</Button>\n        </KeypadRow>\n    </section>\n);\n\nexport default keypad;\n","import React, { Component } from 'react';\nimport './TopSection.css'\n\nclass TopSection extends Component {\n\n    render() {\n        return (\n            <div className=\"status-bar\">\n                {/* top left */}\n                <div id=\"status-bar-logo\">\n                    <p><i className=\"fa fa-free-code-camp\" aria-hidden=\"true\"> </i>\n                        <span>FCC: </span>Calculator</p>\n                </div>\n\n                {/* battery */}\n                <div id=\"status-bar-right\">\n                    <p>100% <i className=\"fa fa-battery-full\" aria-hidden=\"true\"/></p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TopSection;\n","import React, { Component} from 'react';\n\nimport Screen from '../Screen/Screen';\nimport Keypad from '../Keypad/Keypad';\nimport './Calculator.css'\nimport TopSection from \"../TopSection/TopSection\";\n\n\nclass Calculator extends Component {\n    state = {\n        equation: '',\n        result: 0\n    }\n\n    onButtonPress = event => {\n        let equation = this.state.equation;\n        const pressedButton = event.target.innerHTML;\n\n        if (pressedButton === 'C') return this.clear();\n        else if ((pressedButton >= '0' && pressedButton <= '9') || pressedButton === '.') equation += pressedButton;\n        else if (['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1) equation += ' ' + pressedButton + ' ';\n        else if (pressedButton === '=') {\n            try {\n                const evalResult = Function('\"use strict\";return (' + equation + ')')();\n                const result = Number.isInteger(evalResult)? evalResult : evalResult.toFixed(2);\n                this.setState({result});\n            } catch (error) {\n                alert('Invalid Mathematical Equation');\n            }\n        }\n        else {\n            equation = equation.trim();\n            equation = equation.substr(0, equation.length - 1);\n        }\n        this.setState({equation: equation});\n    }\n\n    clear() {\n        this.setState({equation: '', result: 0});\n    }\n\n    render() {\n        return (\n            <div className=\"calculator\">\n                <TopSection />\n                <Screen equation={this.state.equation} result={this.state.result} />\n                <Keypad onButtonPress={this.onButtonPress} />\n            </div>\n        );\n    }\n}\n\nexport default Calculator;\n\n","import React, {Component} from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <p>\n                    © Copyright 2020 -\n                    <a className=\"footer-link\"\n                       href=\"https://github.com/anguyen0208\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                        Anh Nguyen\n                    </a>\n                    <span> <span> </span>| </span>\n                    <span>\n                    Repo Link: {'  '}\n                        <a className=\"footer-link\"\n                           href=\"https://github.com/anguyen0208/calculator\"\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-github\"/>\n                    </a>\n                </span>\n                </p>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n\n","import React from 'react'\nimport Calculator from './components/Calculator/Calculator'\nimport './App.css'\nimport Footer from \"./components/Footer/Footer\";\n\nconst App = () => (\n    <div className=\"app\">\n      <Calculator />\n      <Footer />\n    </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}